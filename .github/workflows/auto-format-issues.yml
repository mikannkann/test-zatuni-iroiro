name: Issue Formatter
on:
  issues:
    types: [opened]

permissions:
  issues: write # issueのラベルと本文を編集するために必要

jobs:
  format-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Format Issue with Labels and Cleanup Body
        uses: actions/github-script@v7
        with:
          script: |
            // --- ヘルパー関数の定義 ---
            // 指定された見出しのセクションの内容を本文から抽出する関数
            // 例: getSectionContent(body, "優先度 \\(Priority\\)")
            function getSectionContent(body, sectionTitle) {
              const regex = new RegExp(`### ${sectionTitle}[\\s\\S]*?\\n\\n([\\s\\S]*?)(?=\\n###|$)`);
              const match = body.match(regex);
              return match ? match[1].trim() : null;
            }

            // --- メイン処理 ---
            const { owner, repo } = context.repo;
            const issue_number = context.payload.issue.number;
            const body = context.payload.issue.body;

            const labelsToAdd = [];

            // --- 賢いラベル判定 ---
            // "優先度" セクションの中身だけを取得して判定
            const priorityContent = getSectionContent(body, "優先度 \\(Priority\\)");
            if (priorityContent) {
              if (priorityContent.includes('priority: critical')) labelsToAdd.push('priority: critical');
              if (priorityContent.includes('priority: must')) labelsToAdd.push('priority: must');
              if (priorityContent.includes('priority: should')) labelsToAdd.push('priority: should');
              if (priorityContent.includes('priority: could')) labelsToAdd.push('priority: could');
            }

            // "関連領域" セクションの中身だけを取得して判定
            const areaContent = getSectionContent(body, "関連領域 \\(Area\\)");
            if (areaContent) {
              if (areaContent.includes('area: frontend')) labelsToAdd.push('area: frontend');
              if (areaContent.includes('area: backend')) labelsToAdd.push('area: backend');
              if (areaContent.includes('area: design')) labelsToAdd.push('area: design');
              if (areaContent.includes('area: docs')) labelsToAdd.push('area: docs');
              if (areaContent.includes('area: infra')) labelsToAdd.push('area: infra');
            }
            
            // 1. ラベルを追加する
            if (labelsToAdd.length > 0) {
              console.log(`Adding labels: ${labelsToAdd.join(', ')}`);
              await github.rest.issues.addLabels({ owner, repo, issue_number, labels: labelsToAdd });
            } else {
              console.log('No labels to add.');
            }

            // 2. 本文から不要なセクションを削除する
            // この正規表現は "Details" (詳細) を含まないように調整
            const cleanupRegex = /###\s*(概要|優先度|関連領域|タスクリスト)[\s\S]*?(?=\n###|$)/g;
            const cleanedBody = body.replace(cleanupRegex, '');

            console.log('Cleaning up issue body...');
            await github.rest.issues.update({
              owner,
              repo,
              issue_number,
              body: cleanedBody.trim() // 前後の余分な改行を削除
            });

            console.log('Issue formatting complete.');